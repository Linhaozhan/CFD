import numpy as np
import time
start =time.clock()
#Define al as the down secondary diagonal line
#Define ac as the main diagonal line
#Define ar as the up secondary diagonal line
#Define b as the constant
def TDMA(al,ac,ar,b):
    n = len(ac) #Print the rank of A by the number of main diagonal line
    all, acl, arl, bl = map(np.array, (al, ac, ar, b))# array list
    d = np.zeros(n)
    u = np.zeros(n-2)
    T = np.zeros(n-1)
    U = np.zeros(n-1)
    y = np.zeros(n)
    UT = np.zeros(n)
    Ty = np.zeros(n)
    d[0] = acl[0]
    u[0] = arl[0] / d[0]
    T[0] = arl[n-1]
    U[0] = all[0]/d[0]
    y[0] = bl[0]/d[0]
    UT[0] = U[0]*T[0]
    Ty[0] = T[0]*y[0]
    for i in range(1, n-1):
        if i<=(n-3):
            d[i] = acl[i]-all[i]*u[i-1]
            u[i] = arl[i]/d[i]
            T[i] = -T[i-1]*u[i-1]
            U[i] = -U[i-1]*all[i]/d[i]
            y[i] = (bl[i]-all[i]*y[i-1])/d[i]
            UT[i] = U[i]*T[i]
            Ty[i] = T[i]*y[i]
        else:
            d[n-2] = acl[n-2]-all[n-2]*u[n-3]
            T[n-2] = all[n-1]-T[n-3]*u[n-3]
            U[n-2] = (arl[n-2]-all[n-2]*U[n-3])/d[n-2]
            y[n-2] = (bl[n-2]-all[n-2]*y[n-3])/d[n-2]
            UT[n-2] = U[n-2]*T[n-2]
            d[n-1] = acl[n-1]-np.sum(UT)
            Ty[n-2] = T[n-2]*y[n-2]
            y[n-1] = (bl[n-1]-np.sum(Ty))/d[n-1]
    x = np.zeros(n)
    for j in range(n-1,-1,-1):
        if j==(n-1):
            x[n-1] = y[n-1]
        elif j==(n-2):
            x[j] = y[j]-U[j]*x[j+1]
        else:
            x[j] = y[j]-u[j]*x[j+1]-U[j]*x[n-1]
    #print(acl)
    return x

#Example
al = np.array([1.,3.,1.,3.,1.,3.,1.,3.])
ac = np.array([1.,1.,7.,4.,4.,4.,4.,4.])
ar = np.array([2.,4.,5.,3.,6.,7.,8.,9.])
b = np.array([2.,3.,4.,5.,6.,7.,8.,9.])
print('TDMA:',TDMA(al,ac,ar,b))
end_TDMA = time.clock()
print('TDMA running time: %s Seconds'%(end_TDMA-start))
A = np.array([[1,2,0,0,0,0,0,1],[3,1,4,0,0,0,0,0],[0,1,7,5,0,0,0,0],[0,0,3,4,3,0,0,0],[0,0,0,1,4,6,0,0,],
              [0,0,0,0,3,4,7,0],[0,0,0,0,0,1,4,8],[9,0,0,0,0,0,3,4]],dtype=float)
print('np.linalg:',np.linalg.solve(A, b))
end = time.clock()
print('np.linalg running time: %s Seconds'%(end-end_TDMA))
